<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApproximatelyXHours" xml:space="preserve">
    <value>The total length of the selected {1} shows is approximately {0} hours.</value>
  </data>
  <data name="AskAlreadyPresentVolumeIDOverwrite" xml:space="preserve">
    <value>This disc ("{1}") has already been imported under the name "{0}". Would you like to overwrite the previous import?</value>
  </data>
  <data name="AskSaveFileOnExit" xml:space="preserve">
    <value>Would you like to save the file before closing?</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="close" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>resources\close.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="database" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>resources\database.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="database_large" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>resources\database_large.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DeleteThisShow" xml:space="preserve">
    <value>Delete this show?</value>
  </data>
  <data name="DiscNumberAlreadyAssigned" xml:space="preserve">
    <value>This disc number has already been assigned to another disc.</value>
  </data>
  <data name="ErrorWhileSavingFile" xml:space="preserve">
    <value>Error while saving file: {0}</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>The file could not be found.</value>
  </data>
  <data name="MustEnterArtistBeforeEnterShow" xml:space="preserve">
    <value>You must enter an artist before this show can be entered.</value>
  </data>
  <data name="NameAlreadyAssignedToResource" xml:space="preserve">
    <value>This name is already assigned to another resource.</value>
  </data>
  <data name="NoElementsForFilter" xml:space="preserve">
    <value>There are no elements for the selected filter.</value>
  </data>
  <data name="NoFurtherOccurrences" xml:space="preserve">
    <value>No more results found.</value>
  </data>
  <data name="NoNextShow" xml:space="preserve">
    <value>You have reached the end of the show list.</value>
  </data>
  <data name="NoPrevShow" xml:space="preserve">
    <value>You are at the beginning of the show list.</value>
  </data>
  <data name="SearchReachedEnd" xml:space="preserve">
    <value>The search reached the end of the table. Do you want to continue searching from the beginning?</value>
  </data>
  <data name="ShowHasNotBeenSaved" xml:space="preserve">
    <value>The show has not been saved. Would you like to keep this show?</value>
  </data>
  <data name="StatusMaster" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\statusmaster.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="StatusPrivate" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\statusprivate.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="StatusReplace" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\statusreplace.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="StatusVideo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\statusvideo.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ArtistAlreadyExists" xml:space="preserve">
    <value>The artist {0} is already defined. Enter a different name.</value>
  </data>
  <data name="NoDrivesAvailable" xml:space="preserve">
    <value>No drives found.</value>
  </data>
  <data name="SelectFolder" xml:space="preserve">
    <value>Select a folder to import.</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
</root>